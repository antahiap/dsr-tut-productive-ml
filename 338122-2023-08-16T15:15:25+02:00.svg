<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="650" onload="init(evt)" viewBox="0 0 1200 650" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="650" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --pid 338122</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="639.00"> </text><svg id="frames" x="10" width="1180" total_samples="4642"><g><title>_run_once (asyncio/base_events.py:1832) (5 samples, 0.11%)</title><rect x="0.1293%" y="228" width="0.1077%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="5"/><text x="0.3793%" y="238.50"></text></g><g><title>_run_once (asyncio/base_events.py:1861) (7 samples, 0.15%)</title><rect x="0.2801%" y="228" width="0.1508%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="7"/><text x="0.5301%" y="238.50"></text></g><g><title>_run_once (asyncio/base_events.py:1867) (8 samples, 0.17%)</title><rect x="0.5386%" y="228" width="0.1723%" height="15" fill="rgb(221,193,54)" fg:x="25" fg:w="8"/><text x="0.7886%" y="238.50"></text></g><g><title>_read_from_self (asyncio/selector_events.py:115) (64 samples, 1.38%)</title><rect x="1.3356%" y="260" width="1.3787%" height="15" fill="rgb(248,212,6)" fg:x="62" fg:w="64"/><text x="1.5856%" y="270.50"></text></g><g><title>_read_ready__data_received (asyncio/selector_events.py:854) (37 samples, 0.80%)</title><rect x="2.7143%" y="276" width="0.7971%" height="15" fill="rgb(208,68,35)" fg:x="126" fg:w="37"/><text x="2.9643%" y="286.50"></text></g><g><title>maybe_read_from_IDLE_client (h11/_readers.py:86) (8 samples, 0.17%)</title><rect x="3.9423%" y="356" width="0.1723%" height="15" fill="rgb(232,128,0)" fg:x="183" fg:w="8"/><text x="4.1923%" y="366.50"></text></g><g><title>_decode_header_lines (h11/_readers.py:68) (5 samples, 0.11%)</title><rect x="4.1361%" y="372" width="0.1077%" height="15" fill="rgb(207,160,47)" fg:x="192" fg:w="5"/><text x="4.3861%" y="382.50"></text></g><g><title>next_event (h11/_connection.py:469) (26 samples, 0.56%)</title><rect x="3.7053%" y="324" width="0.5601%" height="15" fill="rgb(228,23,34)" fg:x="172" fg:w="26"/><text x="3.9553%" y="334.50"></text></g><g><title>_extract_next_receive_event (h11/_connection.py:411) (25 samples, 0.54%)</title><rect x="3.7268%" y="340" width="0.5386%" height="15" fill="rgb(218,30,26)" fg:x="173" fg:w="25"/><text x="3.9768%" y="350.50"></text></g><g><title>maybe_read_from_IDLE_client (h11/_readers.py:87) (7 samples, 0.15%)</title><rect x="4.1146%" y="356" width="0.1508%" height="15" fill="rgb(220,122,19)" fg:x="191" fg:w="7"/><text x="4.3646%" y="366.50"></text></g><g><title>_process_event (h11/_connection.py:272) (8 samples, 0.17%)</title><rect x="4.3947%" y="340" width="0.1723%" height="15" fill="rgb(250,228,42)" fg:x="204" fg:w="8"/><text x="4.6447%" y="350.50"></text></g><g><title>process_event (h11/_state.py:299) (5 samples, 0.11%)</title><rect x="4.4593%" y="356" width="0.1077%" height="15" fill="rgb(240,193,28)" fg:x="207" fg:w="5"/><text x="4.7093%" y="366.50"></text></g><g><title>next_event (h11/_connection.py:471) (27 samples, 0.58%)</title><rect x="4.3085%" y="324" width="0.5816%" height="15" fill="rgb(216,20,37)" fg:x="200" fg:w="27"/><text x="4.5585%" y="334.50"></text></g><g><title>_process_event (h11/_connection.py:306) (7 samples, 0.15%)</title><rect x="4.7393%" y="340" width="0.1508%" height="15" fill="rgb(206,188,39)" fg:x="220" fg:w="7"/><text x="4.9893%" y="350.50"></text></g><g><title>handle_events (uvicorn/protocols/http/h11_impl.py:187) (61 samples, 1.31%)</title><rect x="3.5976%" y="308" width="1.3141%" height="15" fill="rgb(217,207,13)" fg:x="167" fg:w="61"/><text x="3.8476%" y="318.50"></text></g><g><title>handle_events (uvicorn/protocols/http/h11_impl.py:243) (10 samples, 0.22%)</title><rect x="5.1271%" y="308" width="0.2154%" height="15" fill="rgb(231,73,38)" fg:x="238" fg:w="10"/><text x="5.3771%" y="318.50"></text></g><g><title>handle_events (uvicorn/protocols/http/h11_impl.py:255) (9 samples, 0.19%)</title><rect x="5.4072%" y="308" width="0.1939%" height="15" fill="rgb(225,20,46)" fg:x="251" fg:w="9"/><text x="5.6572%" y="318.50"></text></g><g><title>create_task (asyncio/base_events.py:438) (9 samples, 0.19%)</title><rect x="5.4072%" y="324" width="0.1939%" height="15" fill="rgb(210,31,41)" fg:x="251" fg:w="9"/><text x="5.6572%" y="334.50"></text></g><g><title>_read_ready (asyncio/selector_events.py:811) (138 samples, 2.97%)</title><rect x="2.7143%" y="260" width="2.9729%" height="15" fill="rgb(221,200,47)" fg:x="126" fg:w="138"/><text x="2.9643%" y="270.50">_re..</text></g><g><title>_read_ready__data_received (asyncio/selector_events.py:868) (101 samples, 2.18%)</title><rect x="3.5114%" y="276" width="2.1758%" height="15" fill="rgb(226,26,5)" fg:x="163" fg:w="101"/><text x="3.7614%" y="286.50">_..</text></g><g><title>data_received (uvicorn/protocols/http/h11_impl.py:182) (97 samples, 2.09%)</title><rect x="3.5976%" y="292" width="2.0896%" height="15" fill="rgb(249,33,26)" fg:x="167" fg:w="97"/><text x="3.8476%" y="302.50">d..</text></g><g><title>_call_soon (asyncio/base_events.py:773) (13 samples, 0.28%)</title><rect x="5.9242%" y="276" width="0.2801%" height="15" fill="rgb(235,183,28)" fg:x="275" fg:w="13"/><text x="6.1742%" y="286.50"></text></g><g><title>call_soon (asyncio/base_events.py:757) (16 samples, 0.34%)</title><rect x="5.9026%" y="260" width="0.3447%" height="15" fill="rgb(221,5,38)" fg:x="274" fg:w="16"/><text x="6.1526%" y="270.50"></text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:52) (5 samples, 0.11%)</title><rect x="6.3981%" y="276" width="0.1077%" height="15" fill="rgb(247,18,42)" fg:x="297" fg:w="5"/><text x="6.6481%" y="286.50"></text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:14) (6 samples, 0.13%)</title><rect x="7.0228%" y="356" width="0.1293%" height="15" fill="rgb(241,131,45)" fg:x="326" fg:w="6"/><text x="7.2728%" y="366.50"></text></g><g><title>matches (fastapi/routing.py:515) (9 samples, 0.19%)</title><rect x="7.3460%" y="388" width="0.1939%" height="15" fill="rgb(249,31,29)" fg:x="341" fg:w="9"/><text x="7.5960%" y="398.50"></text></g><g><title>matches (starlette/routing.py:238) (7 samples, 0.15%)</title><rect x="7.5399%" y="388" width="0.1508%" height="15" fill="rgb(225,111,53)" fg:x="350" fg:w="7"/><text x="7.7899%" y="398.50"></text></g><g><title>__call__ (starlette/routing.py:715) (21 samples, 0.45%)</title><rect x="7.2813%" y="372" width="0.4524%" height="15" fill="rgb(238,160,17)" fg:x="338" fg:w="21"/><text x="7.5313%" y="382.50"></text></g><g><title>app (starlette/routing.py:64) (5 samples, 0.11%)</title><rect x="7.9492%" y="404" width="0.1077%" height="15" fill="rgb(214,148,48)" fg:x="369" fg:w="5"/><text x="8.1992%" y="414.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:527) (7 samples, 0.15%)</title><rect x="8.1861%" y="436" width="0.1508%" height="15" fill="rgb(232,36,49)" fg:x="380" fg:w="7"/><text x="8.4361%" y="446.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:529) (6 samples, 0.13%)</title><rect x="8.4231%" y="436" width="0.1293%" height="15" fill="rgb(209,103,24)" fg:x="391" fg:w="6"/><text x="8.6731%" y="446.50"></text></g><g><title>__init__ (starlette/datastructures.py:287) (10 samples, 0.22%)</title><rect x="8.8324%" y="484" width="0.2154%" height="15" fill="rgb(229,88,8)" fg:x="410" fg:w="10"/><text x="9.0824%" y="494.50"></text></g><g><title>inner (typing.py:309) (8 samples, 0.17%)</title><rect x="8.8755%" y="500" width="0.1723%" height="15" fill="rgb(213,181,19)" fg:x="412" fg:w="8"/><text x="9.1255%" y="510.50"></text></g><g><title>__init__ (starlette/datastructures.py:415) (19 samples, 0.41%)</title><rect x="8.6816%" y="468" width="0.4093%" height="15" fill="rgb(254,191,54)" fg:x="403" fg:w="19"/><text x="8.9316%" y="478.50"></text></g><g><title>parse_qsl (urllib/parse.py:772) (5 samples, 0.11%)</title><rect x="9.3063%" y="484" width="0.1077%" height="15" fill="rgb(241,83,37)" fg:x="432" fg:w="5"/><text x="9.5563%" y="494.50"></text></g><g><title>__init__ (starlette/datastructures.py:416) (18 samples, 0.39%)</title><rect x="9.0909%" y="468" width="0.3878%" height="15" fill="rgb(233,36,39)" fg:x="422" fg:w="18"/><text x="9.3409%" y="478.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:594) (49 samples, 1.06%)</title><rect x="8.5739%" y="436" width="1.0556%" height="15" fill="rgb(226,3,54)" fg:x="398" fg:w="49"/><text x="8.8239%" y="446.50"></text></g><g><title>query_params (starlette/requests.py:119) (47 samples, 1.01%)</title><rect x="8.6170%" y="452" width="1.0125%" height="15" fill="rgb(245,192,40)" fg:x="400" fg:w="47"/><text x="8.8670%" y="462.50"></text></g><g><title>__init__ (starlette/datastructures.py:421) (7 samples, 0.15%)</title><rect x="9.4787%" y="468" width="0.1508%" height="15" fill="rgb(238,167,29)" fg:x="440" fg:w="7"/><text x="9.7287%" y="478.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:597) (6 samples, 0.13%)</title><rect x="9.6295%" y="436" width="0.1293%" height="15" fill="rgb(232,182,51)" fg:x="447" fg:w="6"/><text x="9.8795%" y="446.50"></text></g><g><title>solve_dependencies (fastapi/dependencies/utils.py:600) (6 samples, 0.13%)</title><rect x="9.7587%" y="436" width="0.1293%" height="15" fill="rgb(231,60,39)" fg:x="453" fg:w="6"/><text x="10.0087%" y="446.50"></text></g><g><title>cookies (starlette/requests.py:130) (6 samples, 0.13%)</title><rect x="9.7587%" y="452" width="0.1293%" height="15" fill="rgb(208,69,12)" fg:x="453" fg:w="6"/><text x="10.0087%" y="462.50"></text></g><g><title>app (fastapi/routing.py:271) (82 samples, 1.77%)</title><rect x="8.1430%" y="420" width="1.7665%" height="15" fill="rgb(235,93,37)" fg:x="378" fg:w="82"/><text x="8.3930%" y="430.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (17 samples, 0.37%)</title><rect x="10.2973%" y="484" width="0.3662%" height="15" fill="rgb(213,116,39)" fg:x="478" fg:w="17"/><text x="10.5473%" y="494.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (8 samples, 0.17%)</title><rect x="10.8358%" y="548" width="0.1723%" height="15" fill="rgb(222,207,29)" fg:x="503" fg:w="8"/><text x="11.0858%" y="558.50"></text></g><g><title>current_async_library (sniffio/_impl.py:82) (6 samples, 0.13%)</title><rect x="10.8789%" y="564" width="0.1293%" height="15" fill="rgb(206,96,30)" fg:x="505" fg:w="6"/><text x="11.1289%" y="574.50"></text></g><g><title>_current_vars (anyio/lowlevel.py:113) (12 samples, 0.26%)</title><rect x="10.7928%" y="516" width="0.2585%" height="15" fill="rgb(218,138,4)" fg:x="501" fg:w="12"/><text x="11.0428%" y="526.50"></text></g><g><title>current_token (anyio/lowlevel.py:66) (11 samples, 0.24%)</title><rect x="10.8143%" y="532" width="0.2370%" height="15" fill="rgb(250,191,14)" fg:x="502" fg:w="11"/><text x="11.0643%" y="542.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:844) (16 samples, 0.34%)</title><rect x="10.7712%" y="484" width="0.3447%" height="15" fill="rgb(239,60,40)" fg:x="500" fg:w="16"/><text x="11.0212%" y="494.50"></text></g><g><title>get (anyio/lowlevel.py:139) (16 samples, 0.34%)</title><rect x="10.7712%" y="500" width="0.3447%" height="15" fill="rgb(206,27,48)" fg:x="500" fg:w="16"/><text x="11.0212%" y="510.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (5 samples, 0.11%)</title><rect x="11.1374%" y="548" width="0.1077%" height="15" fill="rgb(225,35,8)" fg:x="517" fg:w="5"/><text x="11.3874%" y="558.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:845) (7 samples, 0.15%)</title><rect x="11.1159%" y="484" width="0.1508%" height="15" fill="rgb(250,213,24)" fg:x="516" fg:w="7"/><text x="11.3659%" y="494.50"></text></g><g><title>get (anyio/lowlevel.py:139) (7 samples, 0.15%)</title><rect x="11.1159%" y="500" width="0.1508%" height="15" fill="rgb(247,123,22)" fg:x="516" fg:w="7"/><text x="11.3659%" y="510.50"></text></g><g><title>_current_vars (anyio/lowlevel.py:113) (7 samples, 0.15%)</title><rect x="11.1159%" y="516" width="0.1508%" height="15" fill="rgb(231,138,38)" fg:x="516" fg:w="7"/><text x="11.3659%" y="526.50"></text></g><g><title>current_token (anyio/lowlevel.py:66) (7 samples, 0.15%)</title><rect x="11.1159%" y="532" width="0.1508%" height="15" fill="rgb(231,145,46)" fg:x="516" fg:w="7"/><text x="11.3659%" y="542.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1861) (6 samples, 0.13%)</title><rect x="11.3960%" y="532" width="0.1293%" height="15" fill="rgb(251,118,11)" fg:x="529" fg:w="6"/><text x="11.6460%" y="542.50"></text></g><g><title>__enter__ (anyio/_backends/_asyncio.py:246) (10 samples, 0.22%)</title><rect x="11.7406%" y="564" width="0.2154%" height="15" fill="rgb(217,147,25)" fg:x="545" fg:w="10"/><text x="11.9906%" y="574.50"></text></g><g><title>__enter__ (anyio/_backends/_asyncio.py:253) (6 samples, 0.13%)</title><rect x="12.0853%" y="564" width="0.1293%" height="15" fill="rgb(247,81,37)" fg:x="561" fg:w="6"/><text x="12.3353%" y="574.50"></text></g><g><title>cancel_shielded_checkpoint (anyio/_backends/_asyncio.py:470) (40 samples, 0.86%)</title><rect x="11.6329%" y="548" width="0.8617%" height="15" fill="rgb(209,12,38)" fg:x="540" fg:w="40"/><text x="11.8829%" y="558.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1876) (44 samples, 0.95%)</title><rect x="11.6114%" y="532" width="0.9479%" height="15" fill="rgb(227,1,9)" fg:x="539" fg:w="44"/><text x="11.8614%" y="542.50"></text></g><g><title>__aenter__ (anyio/_backends/_asyncio.py:1797) (58 samples, 1.25%)</title><rect x="11.3313%" y="500" width="1.2495%" height="15" fill="rgb(248,47,43)" fg:x="526" fg:w="58"/><text x="11.5813%" y="510.50"></text></g><g><title>acquire (anyio/_backends/_asyncio.py:1858) (58 samples, 1.25%)</title><rect x="11.3313%" y="516" width="1.2495%" height="15" fill="rgb(221,10,30)" fg:x="526" fg:w="58"/><text x="11.5813%" y="526.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:852) (65 samples, 1.40%)</title><rect x="11.2667%" y="484" width="1.4003%" height="15" fill="rgb(210,229,1)" fg:x="523" fg:w="65"/><text x="11.5167%" y="494.50"></text></g><g><title>__enter__ (anyio/_backends/_asyncio.py:246) (7 samples, 0.15%)</title><rect x="12.7962%" y="500" width="0.1508%" height="15" fill="rgb(222,148,37)" fg:x="594" fg:w="7"/><text x="13.0462%" y="510.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:853) (20 samples, 0.43%)</title><rect x="12.6670%" y="484" width="0.4308%" height="15" fill="rgb(234,67,33)" fg:x="588" fg:w="20"/><text x="12.9170%" y="494.50"></text></g><g><title>_current_vars (anyio/lowlevel.py:113) (9 samples, 0.19%)</title><rect x="13.1840%" y="532" width="0.1939%" height="15" fill="rgb(247,98,35)" fg:x="612" fg:w="9"/><text x="13.4340%" y="542.50"></text></g><g><title>current_token (anyio/lowlevel.py:66) (9 samples, 0.19%)</title><rect x="13.1840%" y="548" width="0.1939%" height="15" fill="rgb(247,138,52)" fg:x="612" fg:w="9"/><text x="13.4340%" y="558.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (8 samples, 0.17%)</title><rect x="13.2055%" y="564" width="0.1723%" height="15" fill="rgb(213,79,30)" fg:x="613" fg:w="8"/><text x="13.4555%" y="574.50"></text></g><g><title>current_async_library (sniffio/_impl.py:82) (5 samples, 0.11%)</title><rect x="13.2701%" y="580" width="0.1077%" height="15" fill="rgb(246,177,23)" fg:x="616" fg:w="5"/><text x="13.5201%" y="590.50"></text></g><g><title>current_task (asyncio/tasks.py:38) (5 samples, 0.11%)</title><rect x="13.2701%" y="596" width="0.1077%" height="15" fill="rgb(230,62,27)" fg:x="616" fg:w="5"/><text x="13.5201%" y="606.50"></text></g><g><title>find_root_task (anyio/_backends/_asyncio.py:100) (13 samples, 0.28%)</title><rect x="13.1409%" y="500" width="0.2801%" height="15" fill="rgb(216,154,8)" fg:x="610" fg:w="13"/><text x="13.3909%" y="510.50"></text></g><g><title>get (anyio/lowlevel.py:139) (12 samples, 0.26%)</title><rect x="13.1624%" y="516" width="0.2585%" height="15" fill="rgb(244,35,45)" fg:x="611" fg:w="12"/><text x="13.4124%" y="526.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:855) (14 samples, 0.30%)</title><rect x="13.1409%" y="484" width="0.3016%" height="15" fill="rgb(251,115,12)" fg:x="610" fg:w="14"/><text x="13.3909%" y="494.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:865) (5 samples, 0.11%)</title><rect x="13.5071%" y="484" width="0.1077%" height="15" fill="rgb(240,54,50)" fg:x="627" fg:w="5"/><text x="13.7571%" y="494.50"></text></g><g><title>notify (threading.py:369) (5 samples, 0.11%)</title><rect x="13.7872%" y="532" width="0.1077%" height="15" fill="rgb(233,84,52)" fg:x="640" fg:w="5"/><text x="14.0372%" y="542.50"></text></g><g><title>notify (threading.py:375) (9 samples, 0.19%)</title><rect x="13.8949%" y="532" width="0.1939%" height="15" fill="rgb(207,117,47)" fg:x="645" fg:w="9"/><text x="14.1449%" y="542.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:876) (20 samples, 0.43%)</title><rect x="13.6794%" y="484" width="0.4308%" height="15" fill="rgb(249,43,39)" fg:x="635" fg:w="20"/><text x="13.9294%" y="494.50"></text></g><g><title>put_nowait (queue.py:191) (20 samples, 0.43%)</title><rect x="13.6794%" y="500" width="0.4308%" height="15" fill="rgb(209,38,44)" fg:x="635" fg:w="20"/><text x="13.9294%" y="510.50"></text></g><g><title>put (queue.py:152) (15 samples, 0.32%)</title><rect x="13.7872%" y="516" width="0.3231%" height="15" fill="rgb(236,212,23)" fg:x="640" fg:w="15"/><text x="14.0372%" y="526.50"></text></g><g><title>run_sync (anyio/to_thread.py:33) (183 samples, 3.94%)</title><rect x="10.1896%" y="468" width="3.9423%" height="15" fill="rgb(242,79,21)" fg:x="473" fg:w="183"/><text x="10.4396%" y="478.50">run_..</text></g><g><title>app (fastapi/routing.py:278) (195 samples, 4.20%)</title><rect x="9.9526%" y="420" width="4.2008%" height="15" fill="rgb(211,96,35)" fg:x="462" fg:w="195"/><text x="10.2026%" y="430.50">app (..</text></g><g><title>run_endpoint_function (fastapi/routing.py:192) (195 samples, 4.20%)</title><rect x="9.9526%" y="436" width="4.2008%" height="15" fill="rgb(253,215,40)" fg:x="462" fg:w="195"/><text x="10.2026%" y="446.50">run_e..</text></g><g><title>run_in_threadpool (starlette/concurrency.py:41) (190 samples, 4.09%)</title><rect x="10.0603%" y="452" width="4.0931%" height="15" fill="rgb(211,81,21)" fg:x="467" fg:w="190"/><text x="10.3103%" y="462.50">run_..</text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:844) (5 samples, 0.11%)</title><rect x="14.3473%" y="484" width="0.1077%" height="15" fill="rgb(208,190,38)" fg:x="666" fg:w="5"/><text x="14.5973%" y="494.50"></text></g><g><title>get (anyio/lowlevel.py:139) (5 samples, 0.11%)</title><rect x="14.3473%" y="500" width="0.1077%" height="15" fill="rgb(235,213,38)" fg:x="666" fg:w="5"/><text x="14.5973%" y="510.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:845) (5 samples, 0.11%)</title><rect x="14.4550%" y="484" width="0.1077%" height="15" fill="rgb(237,122,38)" fg:x="671" fg:w="5"/><text x="14.7050%" y="494.50"></text></g><g><title>get (anyio/lowlevel.py:139) (5 samples, 0.11%)</title><rect x="14.4550%" y="500" width="0.1077%" height="15" fill="rgb(244,218,35)" fg:x="671" fg:w="5"/><text x="14.7050%" y="510.50"></text></g><g><title>_current_vars (anyio/lowlevel.py:113) (5 samples, 0.11%)</title><rect x="14.4550%" y="516" width="0.1077%" height="15" fill="rgb(240,68,47)" fg:x="671" fg:w="5"/><text x="14.7050%" y="526.50"></text></g><g><title>current_token (anyio/lowlevel.py:66) (5 samples, 0.11%)</title><rect x="14.4550%" y="532" width="0.1077%" height="15" fill="rgb(210,16,53)" fg:x="671" fg:w="5"/><text x="14.7050%" y="542.50"></text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:147) (5 samples, 0.11%)</title><rect x="14.4550%" y="548" width="0.1077%" height="15" fill="rgb(235,124,12)" fg:x="671" fg:w="5"/><text x="14.7050%" y="558.50"></text></g><g><title>current_async_library (sniffio/_impl.py:82) (5 samples, 0.11%)</title><rect x="14.4550%" y="564" width="0.1077%" height="15" fill="rgb(224,169,11)" fg:x="671" fg:w="5"/><text x="14.7050%" y="574.50"></text></g><g><title>cancel_shielded_checkpoint (anyio/_backends/_asyncio.py:470) (10 samples, 0.22%)</title><rect x="14.6058%" y="548" width="0.2154%" height="15" fill="rgb(250,166,2)" fg:x="678" fg:w="10"/><text x="14.8558%" y="558.50"></text></g><g><title>acquire_on_behalf_of (anyio/_backends/_asyncio.py:1876) (13 samples, 0.28%)</title><rect x="14.6058%" y="532" width="0.2801%" height="15" fill="rgb(242,216,29)" fg:x="678" fg:w="13"/><text x="14.8558%" y="542.50"></text></g><g><title>__aenter__ (anyio/_backends/_asyncio.py:1797) (15 samples, 0.32%)</title><rect x="14.5842%" y="500" width="0.3231%" height="15" fill="rgb(230,116,27)" fg:x="677" fg:w="15"/><text x="14.8342%" y="510.50"></text></g><g><title>acquire (anyio/_backends/_asyncio.py:1858) (15 samples, 0.32%)</title><rect x="14.5842%" y="516" width="0.3231%" height="15" fill="rgb(228,99,48)" fg:x="677" fg:w="15"/><text x="14.8342%" y="526.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:852) (19 samples, 0.41%)</title><rect x="14.5627%" y="484" width="0.4093%" height="15" fill="rgb(253,11,6)" fg:x="676" fg:w="19"/><text x="14.8127%" y="494.50"></text></g><g><title>run_sync_in_worker_thread (anyio/_backends/_asyncio.py:853) (8 samples, 0.17%)</title><rect x="14.9720%" y="484" width="0.1723%" height="15" fill="rgb(247,143,39)" fg:x="695" fg:w="8"/><text x="15.2220%" y="494.50"></text></g><g><title>serialize_response (fastapi/routing.py:146) (53 samples, 1.14%)</title><rect x="14.1965%" y="436" width="1.1417%" height="15" fill="rgb(236,97,10)" fg:x="659" fg:w="53"/><text x="14.4465%" y="446.50"></text></g><g><title>run_in_threadpool (starlette/concurrency.py:41) (51 samples, 1.10%)</title><rect x="14.2396%" y="452" width="1.0987%" height="15" fill="rgb(233,208,19)" fg:x="661" fg:w="51"/><text x="14.4896%" y="462.50"></text></g><g><title>run_sync (anyio/to_thread.py:33) (51 samples, 1.10%)</title><rect x="14.2396%" y="468" width="1.0987%" height="15" fill="rgb(216,164,2)" fg:x="661" fg:w="51"/><text x="14.4896%" y="478.50"></text></g><g><title>app (fastapi/routing.py:303) (65 samples, 1.40%)</title><rect x="14.1965%" y="420" width="1.4003%" height="15" fill="rgb(220,129,5)" fg:x="659" fg:w="65"/><text x="14.4465%" y="430.50"></text></g><g><title>serialize_response (fastapi/routing.py:159) (12 samples, 0.26%)</title><rect x="15.3382%" y="436" width="0.2585%" height="15" fill="rgb(242,17,10)" fg:x="712" fg:w="12"/><text x="15.5882%" y="446.50"></text></g><g><title>serialize (fastapi/_compat.py:141) (11 samples, 0.24%)</title><rect x="15.3598%" y="452" width="0.2370%" height="15" fill="rgb(242,107,0)" fg:x="713" fg:w="11"/><text x="15.6098%" y="462.50"></text></g><g><title>dump_python (pydantic/type_adapter.py:268) (10 samples, 0.22%)</title><rect x="15.3813%" y="468" width="0.2154%" height="15" fill="rgb(251,28,31)" fg:x="714" fg:w="10"/><text x="15.6313%" y="478.50"></text></g><g><title>__init__ (starlette/responses.py:55) (14 samples, 0.30%)</title><rect x="15.6829%" y="452" width="0.3016%" height="15" fill="rgb(233,223,10)" fg:x="728" fg:w="14"/><text x="15.9329%" y="462.50"></text></g><g><title>render (starlette/responses.py:199) (14 samples, 0.30%)</title><rect x="15.6829%" y="468" width="0.3016%" height="15" fill="rgb(215,21,27)" fg:x="728" fg:w="14"/><text x="15.9329%" y="478.50"></text></g><g><title>dumps (json/__init__.py:238) (9 samples, 0.19%)</title><rect x="15.7906%" y="484" width="0.1939%" height="15" fill="rgb(232,23,21)" fg:x="733" fg:w="9"/><text x="16.0406%" y="494.50"></text></g><g><title>encode (json/encoder.py:199) (7 samples, 0.15%)</title><rect x="15.8337%" y="500" width="0.1508%" height="15" fill="rgb(244,5,23)" fg:x="735" fg:w="7"/><text x="16.0837%" y="510.50"></text></g><g><title>__init__ (starlette/responses.py:196) (23 samples, 0.50%)</title><rect x="15.5967%" y="436" width="0.4955%" height="15" fill="rgb(226,81,46)" fg:x="724" fg:w="23"/><text x="15.8467%" y="446.50"></text></g><g><title>__init__ (starlette/responses.py:56) (5 samples, 0.11%)</title><rect x="15.9845%" y="452" width="0.1077%" height="15" fill="rgb(247,70,30)" fg:x="742" fg:w="5"/><text x="16.2345%" y="462.50"></text></g><g><title>app (fastapi/routing.py:305) (24 samples, 0.52%)</title><rect x="15.5967%" y="420" width="0.5170%" height="15" fill="rgb(212,68,19)" fg:x="724" fg:w="24"/><text x="15.8467%" y="430.50"></text></g><g><title>app (starlette/routing.py:66) (379 samples, 8.16%)</title><rect x="8.0569%" y="404" width="8.1646%" height="15" fill="rgb(240,187,13)" fg:x="374" fg:w="379"/><text x="8.3069%" y="414.50">app (starle..</text></g><g><title>app (fastapi/routing.py:306) (5 samples, 0.11%)</title><rect x="16.1137%" y="420" width="0.1077%" height="15" fill="rgb(223,113,26)" fg:x="748" fg:w="5"/><text x="16.3637%" y="430.50"></text></g><g><title>__init__ (logging/__init__.py:318) (5 samples, 0.11%)</title><rect x="16.6738%" y="532" width="0.1077%" height="15" fill="rgb(206,192,2)" fg:x="774" fg:w="5"/><text x="16.9238%" y="542.50"></text></g><g><title>_log (logging/__init__.py:1622) (16 samples, 0.34%)</title><rect x="16.5661%" y="500" width="0.3447%" height="15" fill="rgb(241,108,4)" fg:x="769" fg:w="16"/><text x="16.8161%" y="510.50"></text></g><g><title>makeRecord (logging/__init__.py:1591) (16 samples, 0.34%)</title><rect x="16.5661%" y="516" width="0.3447%" height="15" fill="rgb(247,173,49)" fg:x="769" fg:w="16"/><text x="16.8161%" y="526.50"></text></g><g><title>formatMessage (uvicorn/logging.py:106) (12 samples, 0.26%)</title><rect x="17.1909%" y="612" width="0.2585%" height="15" fill="rgb(224,114,35)" fg:x="798" fg:w="12"/><text x="17.4409%" y="622.50"></text></g><g><title>formatMessage (uvicorn/logging.py:117) (11 samples, 0.24%)</title><rect x="17.5355%" y="612" width="0.2370%" height="15" fill="rgb(245,159,27)" fg:x="814" fg:w="11"/><text x="17.7855%" y="622.50"></text></g><g><title>format (logging/__init__.py:681) (37 samples, 0.80%)</title><rect x="17.1478%" y="596" width="0.7971%" height="15" fill="rgb(245,172,44)" fg:x="796" fg:w="37"/><text x="17.3978%" y="606.50"></text></g><g><title>formatMessage (uvicorn/logging.py:98) (8 samples, 0.17%)</title><rect x="17.7725%" y="612" width="0.1723%" height="15" fill="rgb(236,23,11)" fg:x="825" fg:w="8"/><text x="18.0225%" y="622.50"></text></g><g><title>emit (logging/__init__.py:1100) (44 samples, 0.95%)</title><rect x="17.0185%" y="564" width="0.9479%" height="15" fill="rgb(205,117,38)" fg:x="790" fg:w="44"/><text x="17.2685%" y="574.50"></text></g><g><title>format (logging/__init__.py:943) (41 samples, 0.88%)</title><rect x="17.0832%" y="580" width="0.8832%" height="15" fill="rgb(237,72,25)" fg:x="793" fg:w="41"/><text x="17.3332%" y="590.50"></text></g><g><title>emit (logging/__init__.py:1103) (46 samples, 0.99%)</title><rect x="17.9664%" y="564" width="0.9910%" height="15" fill="rgb(244,70,9)" fg:x="834" fg:w="46"/><text x="18.2164%" y="574.50"></text></g><g><title>callHandlers (logging/__init__.py:1696) (94 samples, 2.02%)</title><rect x="16.9970%" y="532" width="2.0250%" height="15" fill="rgb(217,125,39)" fg:x="789" fg:w="94"/><text x="17.2470%" y="542.50">c..</text></g><g><title>handle (logging/__init__.py:968) (93 samples, 2.00%)</title><rect x="17.0185%" y="548" width="2.0034%" height="15" fill="rgb(235,36,10)" fg:x="790" fg:w="93"/><text x="17.2685%" y="558.50">h..</text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:478) (122 samples, 2.63%)</title><rect x="16.4153%" y="468" width="2.6282%" height="15" fill="rgb(251,123,47)" fg:x="762" fg:w="122"/><text x="16.6653%" y="478.50">se..</text></g><g><title>info (logging/__init__.py:1477) (119 samples, 2.56%)</title><rect x="16.4800%" y="484" width="2.5636%" height="15" fill="rgb(221,13,13)" fg:x="765" fg:w="119"/><text x="16.7300%" y="494.50">in..</text></g><g><title>_log (logging/__init__.py:1624) (99 samples, 2.13%)</title><rect x="16.9108%" y="500" width="2.1327%" height="15" fill="rgb(238,131,9)" fg:x="785" fg:w="99"/><text x="17.1608%" y="510.50">_..</text></g><g><title>handle (logging/__init__.py:1634) (96 samples, 2.07%)</title><rect x="16.9754%" y="516" width="2.0681%" height="15" fill="rgb(211,50,8)" fg:x="788" fg:w="96"/><text x="17.2254%" y="526.50">h..</text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:483) (9 samples, 0.19%)</title><rect x="19.1081%" y="468" width="0.1939%" height="15" fill="rgb(245,182,24)" fg:x="887" fg:w="9"/><text x="19.3581%" y="478.50"></text></g><g><title>get_path_with_query_string (uvicorn/protocols/utils.py:49) (8 samples, 0.17%)</title><rect x="19.1297%" y="484" width="0.1723%" height="15" fill="rgb(242,14,37)" fg:x="888" fg:w="8"/><text x="19.3797%" y="494.50"></text></g><g><title>quote (urllib/parse.py:870) (8 samples, 0.17%)</title><rect x="19.1297%" y="500" width="0.1723%" height="15" fill="rgb(246,228,12)" fg:x="888" fg:w="8"/><text x="19.3797%" y="510.50"></text></g><g><title>normalize_and_validate (h11/_headers.py:164) (5 samples, 0.11%)</title><rect x="19.5821%" y="500" width="0.1077%" height="15" fill="rgb(213,55,15)" fg:x="909" fg:w="5"/><text x="19.8321%" y="510.50"></text></g><g><title>__init__ (h11/_events.py:151) (24 samples, 0.52%)</title><rect x="19.4313%" y="484" width="0.5170%" height="15" fill="rgb(209,9,3)" fg:x="902" fg:w="24"/><text x="19.6813%" y="494.50"></text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:489) (35 samples, 0.75%)</title><rect x="19.3020%" y="468" width="0.7540%" height="15" fill="rgb(230,59,30)" fg:x="896" fg:w="35"/><text x="19.5520%" y="478.50"></text></g><g><title>_clean_up_response_headers_for_sending (h11/_connection.py:592) (5 samples, 0.11%)</title><rect x="20.1206%" y="516" width="0.1077%" height="15" fill="rgb(209,121,21)" fg:x="934" fg:w="5"/><text x="20.3706%" y="526.50"></text></g><g><title>send_with_data_passthrough (h11/_connection.py:530) (9 samples, 0.19%)</title><rect x="20.0991%" y="500" width="0.1939%" height="15" fill="rgb(220,109,13)" fg:x="933" fg:w="9"/><text x="20.3491%" y="510.50"></text></g><g><title>send_with_data_passthrough (h11/_connection.py:537) (18 samples, 0.39%)</title><rect x="20.2930%" y="500" width="0.3878%" height="15" fill="rgb(232,18,1)" fg:x="942" fg:w="18"/><text x="20.5430%" y="510.50"></text></g><g><title>_process_event (h11/_connection.py:306) (7 samples, 0.15%)</title><rect x="20.5299%" y="516" width="0.1508%" height="15" fill="rgb(215,41,42)" fg:x="953" fg:w="7"/><text x="20.7799%" y="526.50"></text></g><g><title>_respond_to_state_changes (h11/_connection.py:337) (7 samples, 0.15%)</title><rect x="20.5299%" y="532" width="0.1508%" height="15" fill="rgb(224,123,36)" fg:x="953" fg:w="7"/><text x="20.7799%" y="542.50"></text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:490) (36 samples, 0.78%)</title><rect x="20.0560%" y="468" width="0.7755%" height="15" fill="rgb(240,125,3)" fg:x="931" fg:w="36"/><text x="20.3060%" y="478.50"></text></g><g><title>send (h11/_connection.py:512) (36 samples, 0.78%)</title><rect x="20.0560%" y="484" width="0.7755%" height="15" fill="rgb(205,98,50)" fg:x="931" fg:w="36"/><text x="20.3060%" y="494.50"></text></g><g><title>send_with_data_passthrough (h11/_connection.py:545) (7 samples, 0.15%)</title><rect x="20.6807%" y="500" width="0.1508%" height="15" fill="rgb(205,185,37)" fg:x="960" fg:w="7"/><text x="20.9307%" y="510.50"></text></g><g><title>write_any_response (h11/_writers.py:59) (6 samples, 0.13%)</title><rect x="20.7023%" y="516" width="0.1293%" height="15" fill="rgb(238,207,15)" fg:x="961" fg:w="6"/><text x="20.9523%" y="526.50"></text></g><g><title>__call__ (starlette/responses.py:164) (267 samples, 5.75%)</title><rect x="16.2215%" y="420" width="5.7518%" height="15" fill="rgb(213,199,42)" fg:x="753" fg:w="267"/><text x="16.4715%" y="430.50">__call_..</text></g><g><title>sender (starlette/middleware/exceptions.py:65) (263 samples, 5.67%)</title><rect x="16.3076%" y="436" width="5.6657%" height="15" fill="rgb(235,201,11)" fg:x="757" fg:w="263"/><text x="16.5576%" y="446.50">sender ..</text></g><g><title>_send (starlette/middleware/errors.py:159) (262 samples, 5.64%)</title><rect x="16.3292%" y="452" width="5.6441%" height="15" fill="rgb(207,46,11)" fg:x="758" fg:w="262"/><text x="16.5792%" y="462.50">_send (..</text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:491) (53 samples, 1.14%)</title><rect x="20.8315%" y="468" width="1.1417%" height="15" fill="rgb(241,35,35)" fg:x="967" fg:w="53"/><text x="21.0815%" y="478.50"></text></g><g><title>write (asyncio/selector_events.py:916) (51 samples, 1.10%)</title><rect x="20.8746%" y="484" width="1.0987%" height="15" fill="rgb(243,32,47)" fg:x="969" fg:w="51"/><text x="21.1246%" y="494.50"></text></g><g><title>send_with_data_passthrough (h11/_connection.py:537) (5 samples, 0.11%)</title><rect x="22.2103%" y="500" width="0.1077%" height="15" fill="rgb(247,202,23)" fg:x="1031" fg:w="5"/><text x="22.4603%" y="510.50"></text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:505) (12 samples, 0.26%)</title><rect x="22.1456%" y="468" width="0.2585%" height="15" fill="rgb(219,102,11)" fg:x="1028" fg:w="12"/><text x="22.3956%" y="478.50"></text></g><g><title>send (h11/_connection.py:512) (10 samples, 0.22%)</title><rect x="22.1887%" y="484" width="0.2154%" height="15" fill="rgb(243,110,44)" fg:x="1030" fg:w="10"/><text x="22.4387%" y="494.50"></text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:506) (32 samples, 0.69%)</title><rect x="22.4041%" y="468" width="0.6894%" height="15" fill="rgb(222,74,54)" fg:x="1040" fg:w="32"/><text x="22.6541%" y="478.50"></text></g><g><title>write (asyncio/selector_events.py:916) (31 samples, 0.67%)</title><rect x="22.4257%" y="484" width="0.6678%" height="15" fill="rgb(216,99,12)" fg:x="1041" fg:w="31"/><text x="22.6757%" y="494.50"></text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:512) (9 samples, 0.19%)</title><rect x="23.1150%" y="468" width="0.1939%" height="15" fill="rgb(226,22,26)" fg:x="1073" fg:w="9"/><text x="23.3650%" y="478.50"></text></g><g><title>send (h11/_connection.py:512) (6 samples, 0.13%)</title><rect x="23.1797%" y="484" width="0.1293%" height="15" fill="rgb(217,163,10)" fg:x="1076" fg:w="6"/><text x="23.4297%" y="494.50"></text></g><g><title>send_with_data_passthrough (h11/_connection.py:537) (6 samples, 0.13%)</title><rect x="23.1797%" y="500" width="0.1293%" height="15" fill="rgb(213,25,53)" fg:x="1076" fg:w="6"/><text x="23.4297%" y="510.50"></text></g><g><title>call_at (asyncio/base_events.py:736) (5 samples, 0.11%)</title><rect x="23.3735%" y="516" width="0.1077%" height="15" fill="rgb(252,105,26)" fg:x="1085" fg:w="5"/><text x="23.6235%" y="526.50"></text></g><g><title>on_response_complete (uvicorn/protocols/http/h11_impl.py:321) (9 samples, 0.19%)</title><rect x="23.3520%" y="484" width="0.1939%" height="15" fill="rgb(220,39,43)" fg:x="1084" fg:w="9"/><text x="23.6020%" y="494.50"></text></g><g><title>call_later (asyncio/base_events.py:721) (9 samples, 0.19%)</title><rect x="23.3520%" y="500" width="0.1939%" height="15" fill="rgb(229,68,48)" fg:x="1084" fg:w="9"/><text x="23.6020%" y="510.50"></text></g><g><title>__call__ (starlette/routing.py:718) (744 samples, 16.03%)</title><rect x="7.7337%" y="372" width="16.0276%" height="15" fill="rgb(252,8,32)" fg:x="359" fg:w="744"/><text x="7.9837%" y="382.50">__call__ (starlette/routi..</text></g><g><title>handle (starlette/routing.py:276) (739 samples, 15.92%)</title><rect x="7.8414%" y="388" width="15.9199%" height="15" fill="rgb(223,20,43)" fg:x="364" fg:w="739"/><text x="8.0914%" y="398.50">handle (starlette/routin..</text></g><g><title>app (starlette/routing.py:69) (350 samples, 7.54%)</title><rect x="16.2215%" y="404" width="7.5399%" height="15" fill="rgb(229,81,49)" fg:x="753" fg:w="350"/><text x="16.4715%" y="414.50">app (starl..</text></g><g><title>__call__ (starlette/responses.py:171) (83 samples, 1.79%)</title><rect x="21.9733%" y="420" width="1.7880%" height="15" fill="rgb(236,28,36)" fg:x="1020" fg:w="83"/><text x="22.2233%" y="430.50">_..</text></g><g><title>sender (starlette/middleware/exceptions.py:65) (81 samples, 1.74%)</title><rect x="22.0164%" y="436" width="1.7449%" height="15" fill="rgb(249,185,26)" fg:x="1022" fg:w="81"/><text x="22.2664%" y="446.50"></text></g><g><title>_send (starlette/middleware/errors.py:159) (79 samples, 1.70%)</title><rect x="22.0595%" y="452" width="1.7019%" height="15" fill="rgb(249,174,33)" fg:x="1024" fg:w="79"/><text x="22.3095%" y="462.50"></text></g><g><title>send (uvicorn/protocols/http/h11_impl.py:524) (20 samples, 0.43%)</title><rect x="23.3305%" y="468" width="0.4308%" height="15" fill="rgb(233,201,37)" fg:x="1083" fg:w="20"/><text x="23.5805%" y="478.50"></text></g><g><title>on_response_complete (uvicorn/protocols/http/h11_impl.py:331) (7 samples, 0.15%)</title><rect x="23.6105%" y="484" width="0.1508%" height="15" fill="rgb(221,78,26)" fg:x="1096" fg:w="7"/><text x="23.8605%" y="494.50"></text></g><g><title>handle_events (uvicorn/protocols/http/h11_impl.py:187) (7 samples, 0.15%)</title><rect x="23.6105%" y="500" width="0.1508%" height="15" fill="rgb(250,127,30)" fg:x="1096" fg:w="7"/><text x="23.8605%" y="510.50"></text></g><g><title>next_event (h11/_connection.py:469) (7 samples, 0.15%)</title><rect x="23.6105%" y="516" width="0.1508%" height="15" fill="rgb(230,49,44)" fg:x="1096" fg:w="7"/><text x="23.8605%" y="526.50"></text></g><g><title>run_asgi (uvicorn/protocols/http/h11_impl.py:408) (813 samples, 17.51%)</title><rect x="6.2904%" y="260" width="17.5140%" height="15" fill="rgb(229,67,23)" fg:x="292" fg:w="813"/><text x="6.5404%" y="270.50">run_asgi (uvicorn/protocols..</text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:84) (798 samples, 17.19%)</title><rect x="6.6135%" y="276" width="17.1909%" height="15" fill="rgb(249,83,47)" fg:x="307" fg:w="798"/><text x="6.8635%" y="286.50">__call__ (uvicorn/middlewar..</text></g><g><title>__call__ (fastapi/applications.py:289) (794 samples, 17.10%)</title><rect x="6.6997%" y="292" width="17.1047%" height="15" fill="rgb(215,43,3)" fg:x="311" fg:w="794"/><text x="6.9497%" y="302.50">__call__ (fastapi/applicat..</text></g><g><title>__call__ (starlette/applications.py:122) (789 samples, 17.00%)</title><rect x="6.8074%" y="308" width="16.9970%" height="15" fill="rgb(238,154,13)" fg:x="316" fg:w="789"/><text x="7.0574%" y="318.50">__call__ (starlette/applic..</text></g><g><title>__call__ (starlette/middleware/errors.py:162) (786 samples, 16.93%)</title><rect x="6.8720%" y="324" width="16.9324%" height="15" fill="rgb(219,56,2)" fg:x="319" fg:w="786"/><text x="7.1220%" y="334.50">__call__ (starlette/middle..</text></g><g><title>__call__ (starlette/middleware/exceptions.py:68) (781 samples, 16.82%)</title><rect x="6.9798%" y="340" width="16.8246%" height="15" fill="rgb(233,0,4)" fg:x="324" fg:w="781"/><text x="7.2298%" y="350.50">__call__ (starlette/middle..</text></g><g><title>__call__ (fastapi/middleware/asyncexitstack.py:17) (773 samples, 16.65%)</title><rect x="7.1521%" y="356" width="16.6523%" height="15" fill="rgb(235,30,7)" fg:x="332" fg:w="773"/><text x="7.4021%" y="366.50">__call__ (fastapi/middlewa..</text></g><g><title>_run (asyncio/events.py:80) (1,067 samples, 22.99%)</title><rect x="0.9263%" y="244" width="22.9858%" height="15" fill="rgb(250,79,13)" fg:x="43" fg:w="1067"/><text x="1.1763%" y="254.50">_run (asyncio/events.py:80)</text></g><g><title>_run_once (asyncio/base_events.py:1899) (1,069 samples, 23.03%)</title><rect x="0.9263%" y="228" width="23.0289%" height="15" fill="rgb(211,146,34)" fg:x="43" fg:w="1069"/><text x="1.1763%" y="238.50">_run_once (asyncio/base_events.py:189..</text></g><g><title>run_forever (asyncio/base_events.py:603) (1,117 samples, 24.06%)</title><rect x="0.0000%" y="212" width="24.0629%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="1117"/><text x="0.2500%" y="222.50">run_forever (asyncio/base_events.py:60..</text></g><g><title>_run_once (asyncio/base_events.py:1900) (5 samples, 0.11%)</title><rect x="23.9552%" y="228" width="0.1077%" height="15" fill="rgb(235,168,5)" fg:x="1112" fg:w="5"/><text x="24.2052%" y="238.50"></text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="68" width="24.0844%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="78.50">&lt;module&gt; (&lt;string&gt;:1)</text></g><g><title>spawn_main (multiprocessing/spawn.py:116) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="84" width="24.0844%" height="15" fill="rgb(215,215,53)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="94.50">spawn_main (multiprocessing/spawn.py:1..</text></g><g><title>_main (multiprocessing/spawn.py:129) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="100" width="24.0844%" height="15" fill="rgb(223,4,10)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="110.50">_main (multiprocessing/spawn.py:129)</text></g><g><title>_bootstrap (multiprocessing/process.py:314) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="116" width="24.0844%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="126.50">_bootstrap (multiprocessing/process.py..</text></g><g><title>run (multiprocessing/process.py:108) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="132" width="24.0844%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="142.50">run (multiprocessing/process.py:108)</text></g><g><title>subprocess_started (uvicorn/_subprocess.py:76) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="148" width="24.0844%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="158.50">subprocess_started (uvicorn/_subproces..</text></g><g><title>run (uvicorn/server.py:61) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="164" width="24.0844%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="174.50">run (uvicorn/server.py:61)</text></g><g><title>run (asyncio/runners.py:44) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="180" width="24.0844%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="190.50">run (asyncio/runners.py:44)</text></g><g><title>run_until_complete (asyncio/base_events.py:636) (1,118 samples, 24.08%)</title><rect x="0.0000%" y="196" width="24.0844%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="1118"/><text x="0.2500%" y="206.50">run_until_complete (asyncio/base_event..</text></g><g><title>run (anyio/_backends/_asyncio.py:794) (8 samples, 0.17%)</title><rect x="24.0844%" y="100" width="0.1723%" height="15" fill="rgb(233,25,53)" fg:x="1118" fg:w="8"/><text x="24.3344%" y="110.50"></text></g><g><title>check_array (sklearn/utils/validation.py:967) (12 samples, 0.26%)</title><rect x="24.4938%" y="196" width="0.2585%" height="15" fill="rgb(210,40,34)" fg:x="1137" fg:w="12"/><text x="24.7438%" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:120) (7 samples, 0.15%)</title><rect x="24.6015%" y="212" width="0.1508%" height="15" fill="rgb(241,220,44)" fg:x="1142" fg:w="7"/><text x="24.8515%" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:599) (22 samples, 0.47%)</title><rect x="24.3214%" y="164" width="0.4739%" height="15" fill="rgb(235,28,35)" fg:x="1129" fg:w="22"/><text x="24.5714%" y="174.50"></text></g><g><title>_validate_data (sklearn/base.py:604) (22 samples, 0.47%)</title><rect x="24.3214%" y="180" width="0.4739%" height="15" fill="rgb(210,56,17)" fg:x="1129" fg:w="22"/><text x="24.5714%" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:865) (24 samples, 0.52%)</title><rect x="24.2999%" y="148" width="0.5170%" height="15" fill="rgb(224,130,29)" fg:x="1128" fg:w="24"/><text x="24.5499%" y="158.50"></text></g><g><title>_get_active_backend (joblib/parallel.py:180) (6 samples, 0.13%)</title><rect x="25.0108%" y="212" width="0.1293%" height="15" fill="rgb(235,212,8)" fg:x="1161" fg:w="6"/><text x="25.2608%" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:135) (13 samples, 0.28%)</title><rect x="24.8815%" y="196" width="0.2801%" height="15" fill="rgb(223,33,50)" fg:x="1155" fg:w="13"/><text x="25.1315%" y="206.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:924) (14 samples, 0.30%)</title><rect x="24.8815%" y="180" width="0.3016%" height="15" fill="rgb(219,149,13)" fg:x="1155" fg:w="14"/><text x="25.1315%" y="190.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:214) (19 samples, 0.41%)</title><rect x="24.8169%" y="164" width="0.4093%" height="15" fill="rgb(250,156,29)" fg:x="1152" fg:w="19"/><text x="25.0669%" y="174.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:218) (7 samples, 0.15%)</title><rect x="25.2693%" y="164" width="0.1508%" height="15" fill="rgb(216,193,19)" fg:x="1173" fg:w="7"/><text x="25.5193%" y="174.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:868) (38 samples, 0.82%)</title><rect x="24.8169%" y="148" width="0.8186%" height="15" fill="rgb(216,135,14)" fg:x="1152" fg:w="38"/><text x="25.0669%" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:219) (10 samples, 0.22%)</title><rect x="25.4201%" y="164" width="0.2154%" height="15" fill="rgb(241,47,5)" fg:x="1180" fg:w="10"/><text x="25.6701%" y="174.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2586) (10 samples, 0.22%)</title><rect x="25.4201%" y="180" width="0.2154%" height="15" fill="rgb(233,42,35)" fg:x="1180" fg:w="10"/><text x="25.6701%" y="190.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (7 samples, 0.15%)</title><rect x="25.4847%" y="196" width="0.1508%" height="15" fill="rgb(231,13,6)" fg:x="1183" fg:w="7"/><text x="25.7347%" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:871) (5 samples, 0.11%)</title><rect x="25.6355%" y="148" width="0.1077%" height="15" fill="rgb(207,181,40)" fg:x="1190" fg:w="5"/><text x="25.8855%" y="158.50"></text></g><g><title>__call__ (joblib/parallel.py:1842) (6 samples, 0.13%)</title><rect x="26.0017%" y="180" width="0.1293%" height="15" fill="rgb(254,173,49)" fg:x="1207" fg:w="6"/><text x="26.2517%" y="190.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:1324) (8 samples, 0.17%)</title><rect x="26.1525%" y="196" width="0.1723%" height="15" fill="rgb(221,1,38)" fg:x="1214" fg:w="8"/><text x="26.4025%" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1846) (14 samples, 0.30%)</title><rect x="26.1525%" y="180" width="0.3016%" height="15" fill="rgb(206,124,46)" fg:x="1214" fg:w="14"/><text x="26.4025%" y="190.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:1337) (6 samples, 0.13%)</title><rect x="26.3249%" y="196" width="0.1293%" height="15" fill="rgb(249,21,11)" fg:x="1222" fg:w="6"/><text x="26.5749%" y="206.50"></text></g><g><title>_with_config (sklearn/utils/parallel.py:14) (10 samples, 0.22%)</title><rect x="26.8419%" y="228" width="0.2154%" height="15" fill="rgb(222,201,40)" fg:x="1246" fg:w="10"/><text x="27.0919%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/utils/parallel.py:62) (19 samples, 0.41%)</title><rect x="26.7773%" y="212" width="0.4093%" height="15" fill="rgb(235,61,29)" fg:x="1243" fg:w="19"/><text x="27.0273%" y="222.50"></text></g><g><title>_with_config (sklearn/utils/parallel.py:15) (6 samples, 0.13%)</title><rect x="27.0573%" y="228" width="0.1293%" height="15" fill="rgb(219,207,3)" fg:x="1256" fg:w="6"/><text x="27.3073%" y="238.50"></text></g><g><title>__init__ (sklearn/utils/parallel.py:106) (7 samples, 0.15%)</title><rect x="28.0483%" y="260" width="0.1508%" height="15" fill="rgb(222,56,46)" fg:x="1302" fg:w="7"/><text x="28.2983%" y="270.50"></text></g><g><title>update_wrapper (functools.py:50) (11 samples, 0.24%)</title><rect x="28.2852%" y="276" width="0.2370%" height="15" fill="rgb(239,76,54)" fg:x="1313" fg:w="11"/><text x="28.5352%" y="286.50"></text></g><g><title>update_wrapper (functools.py:52) (15 samples, 0.32%)</title><rect x="28.5222%" y="276" width="0.3231%" height="15" fill="rgb(231,124,27)" fg:x="1324" fg:w="15"/><text x="28.7722%" y="286.50"></text></g><g><title>update_wrapper (functools.py:56) (16 samples, 0.34%)</title><rect x="28.8453%" y="276" width="0.3447%" height="15" fill="rgb(249,195,6)" fg:x="1339" fg:w="16"/><text x="29.0953%" y="286.50"></text></g><g><title>update_wrapper (functools.py:58) (8 samples, 0.17%)</title><rect x="29.1900%" y="276" width="0.1723%" height="15" fill="rgb(237,174,47)" fg:x="1355" fg:w="8"/><text x="29.4400%" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:876) (98 samples, 2.11%)</title><rect x="27.3589%" y="228" width="2.1112%" height="15" fill="rgb(206,201,31)" fg:x="1270" fg:w="98"/><text x="27.6089%" y="238.50">&lt;..</text></g><g><title>delayed_function (sklearn/utils/parallel.py:97) (81 samples, 1.74%)</title><rect x="27.7251%" y="244" width="1.7449%" height="15" fill="rgb(231,57,52)" fg:x="1287" fg:w="81"/><text x="27.9751%" y="254.50"></text></g><g><title>__init__ (sklearn/utils/parallel.py:107) (59 samples, 1.27%)</title><rect x="28.1991%" y="260" width="1.2710%" height="15" fill="rgb(248,177,22)" fg:x="1309" fg:w="59"/><text x="28.4491%" y="270.50"></text></g><g><title>wraps (functools.py:76) (13 samples, 0.28%)</title><rect x="30.0732%" y="260" width="0.2801%" height="15" fill="rgb(215,211,37)" fg:x="1396" fg:w="13"/><text x="30.3232%" y="270.50"></text></g><g><title>delayed (sklearn/utils/parallel.py:95) (26 samples, 0.56%)</title><rect x="29.8147%" y="244" width="0.5601%" height="15" fill="rgb(241,128,51)" fg:x="1384" fg:w="26"/><text x="30.0647%" y="254.50"></text></g><g><title>update_wrapper (functools.py:50) (8 samples, 0.17%)</title><rect x="31.1073%" y="260" width="0.1723%" height="15" fill="rgb(227,165,31)" fg:x="1444" fg:w="8"/><text x="31.3573%" y="270.50"></text></g><g><title>update_wrapper (functools.py:52) (30 samples, 0.65%)</title><rect x="31.2796%" y="260" width="0.6463%" height="15" fill="rgb(228,167,24)" fg:x="1452" fg:w="30"/><text x="31.5296%" y="270.50"></text></g><g><title>update_wrapper (functools.py:56) (25 samples, 0.54%)</title><rect x="31.9259%" y="260" width="0.5386%" height="15" fill="rgb(228,143,12)" fg:x="1482" fg:w="25"/><text x="32.1759%" y="270.50"></text></g><g><title>update_wrapper (functools.py:58) (16 samples, 0.34%)</title><rect x="32.5506%" y="260" width="0.3447%" height="15" fill="rgb(249,149,8)" fg:x="1511" fg:w="16"/><text x="32.8006%" y="270.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:877) (161 samples, 3.47%)</title><rect x="29.4701%" y="228" width="3.4683%" height="15" fill="rgb(243,35,44)" fg:x="1368" fg:w="161"/><text x="29.7201%" y="238.50">&lt;ge..</text></g><g><title>delayed (sklearn/utils/parallel.py:96) (119 samples, 2.56%)</title><rect x="30.3748%" y="244" width="2.5636%" height="15" fill="rgb(246,89,9)" fg:x="1410" fg:w="119"/><text x="30.6248%" y="254.50">de..</text></g><g><title>_get_sequential_output (joblib/parallel.py:1781) (302 samples, 6.51%)</title><rect x="26.5187%" y="196" width="6.5058%" height="15" fill="rgb(233,213,13)" fg:x="1231" fg:w="302"/><text x="26.7687%" y="206.50">_get_sequ..</text></g><g><title>&lt;genexpr&gt; (sklearn/utils/parallel.py:63) (271 samples, 5.84%)</title><rect x="27.1866%" y="212" width="5.8380%" height="15" fill="rgb(233,141,41)" fg:x="1262" fg:w="271"/><text x="27.4366%" y="222.50">&lt;genexp..</text></g><g><title>__enter__ (contextlib.py:133) (10 samples, 0.22%)</title><rect x="34.7480%" y="228" width="0.2154%" height="15" fill="rgb(239,167,4)" fg:x="1613" fg:w="10"/><text x="34.9980%" y="238.50"></text></g><g><title>_get_threadlocal_config (sklearn/_config.py:27) (5 samples, 0.11%)</title><rect x="35.5235%" y="276" width="0.1077%" height="15" fill="rgb(209,217,16)" fg:x="1649" fg:w="5"/><text x="35.7735%" y="286.50"></text></g><g><title>config_context (sklearn/_config.py:338) (30 samples, 0.65%)</title><rect x="35.1357%" y="244" width="0.6463%" height="15" fill="rgb(219,88,35)" fg:x="1631" fg:w="30"/><text x="35.3857%" y="254.50"></text></g><g><title>get_config (sklearn/_config.py:47) (28 samples, 0.60%)</title><rect x="35.1788%" y="260" width="0.6032%" height="15" fill="rgb(220,193,23)" fg:x="1633" fg:w="28"/><text x="35.4288%" y="270.50"></text></g><g><title>_get_threadlocal_config (sklearn/_config.py:29) (7 samples, 0.15%)</title><rect x="35.6312%" y="276" width="0.1508%" height="15" fill="rgb(230,90,52)" fg:x="1654" fg:w="7"/><text x="35.8812%" y="286.50"></text></g><g><title>set_config (sklearn/_config.py:169) (10 samples, 0.22%)</title><rect x="35.9543%" y="260" width="0.2154%" height="15" fill="rgb(252,106,19)" fg:x="1669" fg:w="10"/><text x="36.2043%" y="270.50"></text></g><g><title>set_config (sklearn/_config.py:184) (113 samples, 2.43%)</title><rect x="36.4283%" y="260" width="2.4343%" height="15" fill="rgb(206,74,20)" fg:x="1691" fg:w="113"/><text x="36.6783%" y="270.50">se..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:408) (22 samples, 0.47%)</title><rect x="38.3886%" y="276" width="0.4739%" height="15" fill="rgb(230,138,44)" fg:x="1782" fg:w="22"/><text x="38.6386%" y="286.50"></text></g><g><title>set_config (sklearn/_config.py:186) (5 samples, 0.11%)</title><rect x="38.8626%" y="260" width="0.1077%" height="15" fill="rgb(235,182,43)" fg:x="1804" fg:w="5"/><text x="39.1126%" y="270.50"></text></g><g><title>config_context (sklearn/_config.py:339) (157 samples, 3.38%)</title><rect x="35.7820%" y="244" width="3.3822%" height="15" fill="rgb(242,16,51)" fg:x="1661" fg:w="157"/><text x="36.0320%" y="254.50">con..</text></g><g><title>__enter__ (contextlib.py:135) (198 samples, 4.27%)</title><rect x="34.9634%" y="228" width="4.2654%" height="15" fill="rgb(248,9,4)" fg:x="1623" fg:w="198"/><text x="35.2134%" y="238.50">__ent..</text></g><g><title>_get_threadlocal_config (sklearn/_config.py:27) (8 samples, 0.17%)</title><rect x="40.4782%" y="276" width="0.1723%" height="15" fill="rgb(210,31,22)" fg:x="1879" fg:w="8"/><text x="40.7282%" y="286.50"></text></g><g><title>set_config (sklearn/_config.py:169) (15 samples, 0.32%)</title><rect x="40.3490%" y="260" width="0.3231%" height="15" fill="rgb(239,54,39)" fg:x="1873" fg:w="15"/><text x="40.5990%" y="270.50"></text></g><g><title>set_config (sklearn/_config.py:172) (7 samples, 0.15%)</title><rect x="40.7368%" y="260" width="0.1508%" height="15" fill="rgb(230,99,41)" fg:x="1891" fg:w="7"/><text x="40.9868%" y="270.50"></text></g><g><title>set_config (sklearn/_config.py:184) (94 samples, 2.02%)</title><rect x="41.1891%" y="260" width="2.0250%" height="15" fill="rgb(253,106,12)" fg:x="1912" fg:w="94"/><text x="41.4391%" y="270.50">s..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:408) (14 samples, 0.30%)</title><rect x="42.9125%" y="276" width="0.3016%" height="15" fill="rgb(213,46,41)" fg:x="1992" fg:w="14"/><text x="43.1625%" y="286.50"></text></g><g><title>__exit__ (contextlib.py:142) (196 samples, 4.22%)</title><rect x="39.2719%" y="228" width="4.2223%" height="15" fill="rgb(215,133,35)" fg:x="1823" fg:w="196"/><text x="39.5219%" y="238.50">__exi..</text></g><g><title>config_context (sklearn/_config.py:355) (169 samples, 3.64%)</title><rect x="39.8535%" y="244" width="3.6407%" height="15" fill="rgb(213,28,5)" fg:x="1850" fg:w="169"/><text x="40.1035%" y="254.50">conf..</text></g><g><title>__init__ (contextlib.py:103) (25 samples, 0.54%)</title><rect x="43.7527%" y="244" width="0.5386%" height="15" fill="rgb(215,77,49)" fg:x="2031" fg:w="25"/><text x="44.0027%" y="254.50"></text></g><g><title>__init__ (contextlib.py:104) (13 samples, 0.28%)</title><rect x="44.2913%" y="244" width="0.2801%" height="15" fill="rgb(248,100,22)" fg:x="2056" fg:w="13"/><text x="44.5413%" y="254.50"></text></g><g><title>__call__ (sklearn/utils/parallel.py:126) (520 samples, 11.20%)</title><rect x="33.5847%" y="212" width="11.2021%" height="15" fill="rgb(208,67,9)" fg:x="1559" fg:w="520"/><text x="33.8347%" y="222.50">__call__ (sklear..</text></g><g><title>helper (contextlib.py:281) (56 samples, 1.21%)</title><rect x="43.5804%" y="228" width="1.2064%" height="15" fill="rgb(219,133,21)" fg:x="2023" fg:w="56"/><text x="43.8304%" y="238.50"></text></g><g><title>__init__ (contextlib.py:106) (10 samples, 0.22%)</title><rect x="44.5713%" y="244" width="0.2154%" height="15" fill="rgb(246,46,29)" fg:x="2069" fg:w="10"/><text x="44.8213%" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:1450) (23 samples, 0.50%)</title><rect x="45.6915%" y="260" width="0.4955%" height="15" fill="rgb(246,185,52)" fg:x="2121" fg:w="23"/><text x="45.9415%" y="270.50"></text></g><g><title>isclass (inspect.py:197) (13 samples, 0.28%)</title><rect x="45.9069%" y="276" width="0.2801%" height="15" fill="rgb(252,136,11)" fg:x="2131" fg:w="13"/><text x="46.1569%" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:1458) (6 samples, 0.13%)</title><rect x="46.2516%" y="260" width="0.1293%" height="15" fill="rgb(219,138,53)" fg:x="2147" fg:w="6"/><text x="46.5016%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:1399) (42 samples, 0.90%)</title><rect x="46.7902%" y="292" width="0.9048%" height="15" fill="rgb(211,51,23)" fg:x="2172" fg:w="42"/><text x="47.0402%" y="302.50"></text></g><g><title>_is_fitted (sklearn/utils/validation.py:1399) (152 samples, 3.27%)</title><rect x="46.5532%" y="276" width="3.2745%" height="15" fill="rgb(247,221,28)" fg:x="2161" fg:w="152"/><text x="46.8032%" y="286.50">_is..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:1400) (99 samples, 2.13%)</title><rect x="47.6950%" y="292" width="2.1327%" height="15" fill="rgb(251,222,45)" fg:x="2214" fg:w="99"/><text x="47.9450%" y="302.50">&lt;..</text></g><g><title>_is_fitted (sklearn/utils/validation.py:1400) (9 samples, 0.19%)</title><rect x="49.8277%" y="276" width="0.1939%" height="15" fill="rgb(217,162,53)" fg:x="2313" fg:w="9"/><text x="50.0777%" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:991) (211 samples, 4.55%)</title><rect x="45.5838%" y="244" width="4.5455%" height="15" fill="rgb(229,93,14)" fg:x="2116" fg:w="211"/><text x="45.8338%" y="254.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:1461) (174 samples, 3.75%)</title><rect x="46.3809%" y="260" width="3.7484%" height="15" fill="rgb(209,67,49)" fg:x="2153" fg:w="174"/><text x="46.6309%" y="270.50">chec..</text></g><g><title>_is_fitted (sklearn/utils/validation.py:1402) (5 samples, 0.11%)</title><rect x="50.0215%" y="276" width="0.1077%" height="15" fill="rgb(213,87,29)" fg:x="2322" fg:w="5"/><text x="50.2715%" y="286.50"></text></g><g><title>_num_features (sklearn/utils/validation.py:298) (15 samples, 0.32%)</title><rect x="50.7540%" y="292" width="0.3231%" height="15" fill="rgb(205,151,52)" fg:x="2356" fg:w="15"/><text x="51.0040%" y="302.50"></text></g><g><title>_num_features (sklearn/utils/validation.py:301) (14 samples, 0.30%)</title><rect x="51.0771%" y="292" width="0.3016%" height="15" fill="rgb(253,215,39)" fg:x="2371" fg:w="14"/><text x="51.3271%" y="302.50"></text></g><g><title>_num_features (sklearn/utils/validation.py:310) (5 samples, 0.11%)</title><rect x="51.5295%" y="292" width="0.1077%" height="15" fill="rgb(221,220,41)" fg:x="2392" fg:w="5"/><text x="51.7795%" y="302.50"></text></g><g><title>_num_features (sklearn/utils/validation.py:311) (14 samples, 0.30%)</title><rect x="51.6372%" y="292" width="0.3016%" height="15" fill="rgb(218,133,21)" fg:x="2397" fg:w="14"/><text x="51.8872%" y="302.50"></text></g><g><title>_check_n_features (sklearn/base.py:391) (67 samples, 1.44%)</title><rect x="50.5601%" y="276" width="1.4433%" height="15" fill="rgb(221,193,43)" fg:x="2347" fg:w="67"/><text x="50.8101%" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:473) (90 samples, 1.94%)</title><rect x="50.2801%" y="260" width="1.9388%" height="15" fill="rgb(240,128,52)" fg:x="2334" fg:w="90"/><text x="50.5301%" y="270.50">_..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:992) (99 samples, 2.13%)</title><rect x="50.1293%" y="244" width="2.1327%" height="15" fill="rgb(253,114,12)" fg:x="2327" fg:w="99"/><text x="50.3793%" y="254.50">p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:993) (1,318 samples, 28.39%)</title><rect x="52.2620%" y="244" width="28.3929%" height="15" fill="rgb(215,223,47)" fg:x="2426" fg:w="1318"/><text x="52.5120%" y="254.50">predict_proba (sklearn/tree/_classes.py:993)</text></g><g><title>issparse (scipy/sparse/_base.py:1487) (5 samples, 0.11%)</title><rect x="80.5472%" y="260" width="0.1077%" height="15" fill="rgb(248,225,23)" fg:x="3739" fg:w="5"/><text x="80.7972%" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:995) (6 samples, 0.13%)</title><rect x="80.6549%" y="244" width="0.1293%" height="15" fill="rgb(250,108,0)" fg:x="3744" fg:w="6"/><text x="80.9049%" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:996) (27 samples, 0.58%)</title><rect x="80.7841%" y="244" width="0.5816%" height="15" fill="rgb(228,208,7)" fg:x="3750" fg:w="27"/><text x="81.0341%" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:997) (181 samples, 3.90%)</title><rect x="81.3658%" y="244" width="3.8992%" height="15" fill="rgb(244,45,10)" fg:x="3777" fg:w="181"/><text x="81.6158%" y="254.50">pred..</text></g><g><title>_sum (numpy/core/_methods.py:49) (135 samples, 2.91%)</title><rect x="82.3567%" y="260" width="2.9082%" height="15" fill="rgb(207,125,25)" fg:x="3823" fg:w="135"/><text x="82.6067%" y="270.50">_s..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:998) (154 samples, 3.32%)</title><rect x="85.2650%" y="244" width="3.3175%" height="15" fill="rgb(210,195,18)" fg:x="3958" fg:w="154"/><text x="85.5150%" y="254.50">pre..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:647) (2,106 samples, 45.37%)</title><rect x="45.1314%" y="228" width="45.3684%" height="15" fill="rgb(249,80,12)" fg:x="2095" fg:w="2106"/><text x="45.3814%" y="238.50">_accumulate_prediction (sklearn/ensemble/_forest.py:647)</text></g><g><title>predict_proba (sklearn/tree/_classes.py:999) (89 samples, 1.92%)</title><rect x="88.5825%" y="244" width="1.9173%" height="15" fill="rgb(221,65,9)" fg:x="4112" fg:w="89"/><text x="88.8325%" y="254.50">p..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:648) (32 samples, 0.69%)</title><rect x="90.4998%" y="228" width="0.6894%" height="15" fill="rgb(235,49,36)" fg:x="4201" fg:w="32"/><text x="90.7498%" y="238.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:649) (6 samples, 0.13%)</title><rect x="91.1891%" y="228" width="0.1293%" height="15" fill="rgb(225,32,20)" fg:x="4233" fg:w="6"/><text x="91.4391%" y="238.50"></text></g><g><title>_get_sequential_output (joblib/parallel.py:1784) (2,739 samples, 59.00%)</title><rect x="33.1538%" y="196" width="59.0047%" height="15" fill="rgb(215,141,46)" fg:x="1539" fg:w="2739"/><text x="33.4038%" y="206.50">_get_sequential_output (joblib/parallel.py:1784)</text></g><g><title>__call__ (sklearn/utils/parallel.py:127) (2,199 samples, 47.37%)</title><rect x="44.7867%" y="212" width="47.3718%" height="15" fill="rgb(250,160,47)" fg:x="2079" fg:w="2199"/><text x="45.0367%" y="222.50">__call__ (sklearn/utils/parallel.py:127)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:650) (39 samples, 0.84%)</title><rect x="91.3184%" y="228" width="0.8402%" height="15" fill="rgb(216,222,40)" fg:x="4239" fg:w="39"/><text x="91.5684%" y="238.50"></text></g><g><title>_get_sequential_output (joblib/parallel.py:1785) (5 samples, 0.11%)</title><rect x="92.1586%" y="196" width="0.1077%" height="15" fill="rgb(234,217,39)" fg:x="4278" fg:w="5"/><text x="92.4086%" y="206.50"></text></g><g><title>print_progress (joblib/parallel.py:1488) (7 samples, 0.15%)</title><rect x="92.4817%" y="212" width="0.1508%" height="15" fill="rgb(207,178,40)" fg:x="4293" fg:w="7"/><text x="92.7317%" y="222.50"></text></g><g><title>_get_sequential_output (joblib/parallel.py:1786) (19 samples, 0.41%)</title><rect x="92.2663%" y="196" width="0.4093%" height="15" fill="rgb(221,136,13)" fg:x="4283" fg:w="19"/><text x="92.5163%" y="206.50"></text></g><g><title>__call__ (sklearn/utils/parallel.py:65) (3,102 samples, 66.82%)</title><rect x="25.9586%" y="164" width="66.8246%" height="15" fill="rgb(249,199,10)" fg:x="1205" fg:w="3102"/><text x="26.2086%" y="174.50">__call__ (sklearn/utils/parallel.py:65)</text></g><g><title>__call__ (joblib/parallel.py:1855) (3,078 samples, 66.31%)</title><rect x="26.4757%" y="180" width="66.3076%" height="15" fill="rgb(249,222,13)" fg:x="1229" fg:w="3078"/><text x="26.7257%" y="190.50">__call__ (joblib/parallel.py:1855)</text></g><g><title>__init__ (joblib/parallel.py:1190) (7 samples, 0.15%)</title><rect x="92.7833%" y="164" width="0.1508%" height="15" fill="rgb(244,185,38)" fg:x="4307" fg:w="7"/><text x="93.0333%" y="174.50"></text></g><g><title>__init__ (queue.py:50) (7 samples, 0.15%)</title><rect x="93.4080%" y="180" width="0.1508%" height="15" fill="rgb(236,202,9)" fg:x="4336" fg:w="7"/><text x="93.6580%" y="190.50"></text></g><g><title>__init__ (threading.py:247) (6 samples, 0.13%)</title><rect x="93.6019%" y="196" width="0.1293%" height="15" fill="rgb(250,229,37)" fg:x="4345" fg:w="6"/><text x="93.8519%" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:1300) (23 samples, 0.50%)</title><rect x="93.2788%" y="164" width="0.4955%" height="15" fill="rgb(206,174,23)" fg:x="4330" fg:w="23"/><text x="93.5288%" y="174.50"></text></g><g><title>__init__ (queue.py:54) (10 samples, 0.22%)</title><rect x="93.5588%" y="180" width="0.2154%" height="15" fill="rgb(211,33,43)" fg:x="4343" fg:w="10"/><text x="93.8088%" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:876) (3,214 samples, 69.24%)</title><rect x="25.8509%" y="148" width="69.2374%" height="15" fill="rgb(245,58,50)" fg:x="1200" fg:w="3214"/><text x="26.1009%" y="158.50">predict_proba (sklearn/ensemble/_forest.py:876)</text></g><g><title>__init__ (joblib/parallel.py:1307) (61 samples, 1.31%)</title><rect x="93.7742%" y="164" width="1.3141%" height="15" fill="rgb(244,68,36)" fg:x="4353" fg:w="61"/><text x="94.0242%" y="174.50"></text></g><g><title>uuid4 (uuid.py:715) (59 samples, 1.27%)</title><rect x="93.8173%" y="180" width="1.2710%" height="15" fill="rgb(232,229,15)" fg:x="4355" fg:w="59"/><text x="94.0673%" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:823) (3,291 samples, 70.90%)</title><rect x="24.2999%" y="132" width="70.8962%" height="15" fill="rgb(254,30,23)" fg:x="1128" fg:w="3291"/><text x="24.5499%" y="142.50">predict (sklearn/ensemble/_forest.py:823)</text></g><g><title>predict (iris_app.py:30) (3,333 samples, 71.80%)</title><rect x="24.2999%" y="116" width="71.8009%" height="15" fill="rgb(235,160,14)" fg:x="1128" fg:w="3333"/><text x="24.5499%" y="126.50">predict (iris_app.py:30)</text></g><g><title>predict (sklearn/ensemble/_forest.py:826) (42 samples, 0.90%)</title><rect x="95.1960%" y="132" width="0.9048%" height="15" fill="rgb(212,155,44)" fg:x="4419" fg:w="42"/><text x="95.4460%" y="142.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1229) (21 samples, 0.45%)</title><rect x="95.6484%" y="148" width="0.4524%" height="15" fill="rgb(226,2,50)" fg:x="4440" fg:w="21"/><text x="95.8984%" y="158.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:59) (19 samples, 0.41%)</title><rect x="95.6915%" y="164" width="0.4093%" height="15" fill="rgb(234,177,6)" fg:x="4442" fg:w="19"/><text x="95.9415%" y="174.50"></text></g><g><title>predict (iris_app.py:32) (5 samples, 0.11%)</title><rect x="96.1008%" y="116" width="0.1077%" height="15" fill="rgb(217,24,9)" fg:x="4461" fg:w="5"/><text x="96.3508%" y="126.50"></text></g><g><title>run (anyio/_backends/_asyncio.py:807) (3,341 samples, 71.97%)</title><rect x="24.2999%" y="100" width="71.9733%" height="15" fill="rgb(220,13,46)" fg:x="1128" fg:w="3341"/><text x="24.5499%" y="110.50">run (anyio/_backends/_asyncio.py:807)</text></g><g><title>call_soon_threadsafe (asyncio/base_events.py:801) (6 samples, 0.13%)</title><rect x="96.3378%" y="116" width="0.1293%" height="15" fill="rgb(239,221,27)" fg:x="4472" fg:w="6"/><text x="96.5878%" y="126.50"></text></g><g><title>_call_soon (asyncio/base_events.py:773) (5 samples, 0.11%)</title><rect x="96.3593%" y="132" width="0.1077%" height="15" fill="rgb(222,198,25)" fg:x="4473" fg:w="5"/><text x="96.6093%" y="142.50"></text></g><g><title>all (4,642 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(211,99,13)" fg:x="0" fg:w="4642"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:973) (3,524 samples, 75.92%)</title><rect x="24.0844%" y="68" width="75.9156%" height="15" fill="rgb(232,111,31)" fg:x="1118" fg:w="3524"/><text x="24.3344%" y="78.50">_bootstrap (threading.py:973)</text></g><g><title>_bootstrap_inner (threading.py:1016) (3,524 samples, 75.92%)</title><rect x="24.0844%" y="84" width="75.9156%" height="15" fill="rgb(245,82,37)" fg:x="1118" fg:w="3524"/><text x="24.3344%" y="94.50">_bootstrap_inner (threading.py:1016)</text></g><g><title>run (anyio/_backends/_asyncio.py:816) (173 samples, 3.73%)</title><rect x="96.2732%" y="100" width="3.7268%" height="15" fill="rgb(227,149,46)" fg:x="4469" fg:w="173"/><text x="96.5232%" y="110.50">run ..</text></g><g><title>call_soon_threadsafe (asyncio/base_events.py:804) (164 samples, 3.53%)</title><rect x="96.4670%" y="116" width="3.5330%" height="15" fill="rgb(218,36,50)" fg:x="4478" fg:w="164"/><text x="96.7170%" y="126.50">cal..</text></g><g><title>_write_to_self (asyncio/selector_events.py:135) (162 samples, 3.49%)</title><rect x="96.5101%" y="132" width="3.4899%" height="15" fill="rgb(226,80,48)" fg:x="4480" fg:w="162"/><text x="96.7601%" y="142.50">_wr..</text></g></svg></svg>